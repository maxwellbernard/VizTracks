name: Fly Deploy
on:
  push:
    branches:
      - main

jobs:
  changes:
    name: Detect changes
    runs-on: ubuntu-latest
    outputs:
      backend: ${{ steps.changes.outputs.backend }}
      frontend: ${{ steps.changes.outputs.frontend }}
      encoder: ${{ steps.changes.outputs.encoder }}
    steps:
      - uses: actions/checkout@v4
      - uses: dorny/paths-filter@v3
        id: changes
        with:
          filters: |
            backend:
              - 'backend/**'
              - 'src/**'
              - 'infra/backend/**'
              - 'requirements.txt'
            frontend:
              - 'app.py'
              - 'assets/**'
              - 'infra/frontend/**'
              - 'requirements.txt'
            encoder:
              - 'encoder/**'
              - 'infra/encoder/**'

  deploy-backend:
    name: Deploy backend
    runs-on: ubuntu-latest
    needs: changes
    if: needs.changes.outputs.backend == 'true'
    concurrency: deploy-backend
    steps:
      - uses: actions/checkout@v4
      - uses: superfly/flyctl-actions/setup-flyctl@master
      - name: Deploy backend app
        run: flyctl deploy --remote-only -c infra/backend/fly.toml -a spotify-animation
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}

  deploy-encoder:
    name: Deploy encoder
    runs-on: ubuntu-latest
    needs: changes
    if: needs.changes.outputs.encoder == 'true'
    concurrency: deploy-encoder
    steps:
      - uses: actions/checkout@v4
      - uses: superfly/flyctl-actions/setup-flyctl@master
      - name: Deploy encoder app
        run: flyctl deploy --remote-only -c infra/encoder/fly.toml -a spotify-animation-encoder
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}

  deploy-frontend:
    name: Deploy frontend
    runs-on: ubuntu-latest
    needs: changes
    if: needs.changes.outputs.frontend == 'true'
    concurrency: deploy-frontend
    steps:
      - uses: actions/checkout@v4
      - uses: superfly/flyctl-actions/setup-flyctl@master
      - name: Deploy frontend app
        run: flyctl deploy --remote-only -c infra/frontend/fly.toml -a spotify-animation-frontend
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}
